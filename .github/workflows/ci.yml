# This workflow will do a clean install of node dependencies, build the source code and run tests and linters across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Build Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize, unlabeled ]

jobs:
  build:

    if: "!contains(github.event.pull_request.labels.*.name, 'skip ci tests')"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "America/New_York"
        timezoneMacos: "America/New_York"
        timezoneWindows: "America/New_York"

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache multiple paths
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ids-enterprise-wc-016

    - name: Install Dependencies
      run: npm ci

    - name: Build and Compile
      run: npm run build

    - name: Run Lint Checks
      run: npm run lint

    - name: Run Tests
      uses: percy/exec-action@v0.3.1
      with:
        command: "npm run test:ci"
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract branch name
      if: github.event.pull_request.merged == true
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Configure AWS credentials
      if: github.event.pull_request.merged == true
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Copy wc dist-demo files to S3
      if: github.event.pull_request.merged == true
      run: |
       branch_name=${{ steps.extract_branch.outputs.branch }}
       echo "Deploying ${branch_name//./_}"
       aws s3 cp demo-dist/ "s3://wc-demos/${branch_name//./_}" --recursive
       aws configure set preview.cloudfront true
       aws cloudfront create-invalidation --distribution-id E2Q51X0UO412XH --paths /${branch_name//./_}
