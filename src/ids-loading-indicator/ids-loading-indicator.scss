/* Ids Loader */
@import '../ids-base/ids-base';

$pi: 3.14159265358979;
$circle-radius: 45;

$progress-color: var(--ids-color-palette-azure-80);
$overall-color: var(--ids-color-palette-azure-10);

.ids-loading-indicator {
  @include bg-transparent();
  @include fixed();
  @include h-full();
  @include w-full();

  height: 2px;
  left: 0;
  top: 0;
}

:host(ids-loading-indicator:not([linear]):not([sticky])) {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

:host(ids-loading-indicator:not([linear]):not([sticky]):not([inline])) {
  width: 50px;
  height: 50px;
}

:host(ids-loading-indicator[inline]:not([linear]):not([sticky])) {
  width: 11px;
  height: 11px;
}

:host(ids-loading-indicator[linear]),
:host(ids-loading-indicator[sticky]) {
  position: relative;
  display: flex;
  justify-content: center;
  width: 100%;
}

:host(ids-loading-indicator[sticky]) {
  position: absolute;
  align-items: center;
  top: 0;
  left: 0;
}

:host(ids-loading-indicator[linear]) {
  align-items: flex-end;
  height: 48px;
}

.progress {
  @include z-1();
}

.progress-percentage {
  @include text-graphite-30();

  display: flex;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.progress-percentage.linear {
  top: calc(50%);
}

.percentage {
  position: relative;
  top: -4px;
  right: -2px;
}

svg.linear-indicator {
  display: flex;
  align-items: center;
  width: 100%;
  height: 6px;
  overflow: hidden;

  &.sticky {
    height: 8px;
  }

  .progress {
    fill: $progress-color;
    transform: #{'scaleX(calc(var(--progress) * 1%))'};
  }

  .overall {
    fill: $overall-color;
  }
}

svg.circular-indicator {
  position: relative;
  overflow: visible;
  fill: transparent;
  transform-origin: 50% 50%;
  transform: rotateZ(-90deg);
  display: flex;
  align-items: center;
  justify-content: center;

  circle {
    transform-origin: 50% 50%;
  }

  .overall {
    stroke: $overall-color;
  }

  .progress {
    stroke-dasharray: 283;
    stroke: $progress-color;
  }
}

svg.circular-indicator:not(.inline) {
  width: 50px;
  height: 50px;
}

svg.circular-indicator.inline {
  width: 11px;
  height: 11px;
}

.circular-indicator.determinate .progress {
  /*
   * circumference is 2Ï€r(45) => 282.74, or 283
   */
  stroke-dashoffset: #{'calc(283 - (var(--progress) * 2.83))'};
}

@keyframes indeterminate-spinner-progress-anim {
  0%,
  15% {
    stroke-dashoffset: 272;
    transform: rotate(0);
  }

  60% {
    stroke-dashoffset: 80;
    transform: rotate(45deg);
  }

  65% {
    stroke-dashoffset: 80;
    transform: rotate(45deg);
  }

  100% {
    stroke-dashoffset: 272;
    transform: rotate(360deg);
  }
}

@keyframes indeterminate-spinner-anim {
  0% {
    transform: rotateZ(0deg);
  }

  100% {
    transform: rotateZ(360deg);
  }
}

svg.circular-indicator.indeterminate .progress {
  animation: 1.52s linear infinite both indeterminate-spinner-progress-anim;
}

svg.circular-indicator.indeterminate {
  animation: 2.4s linear infinite indeterminate-spinner-anim;
}

svg.linear-indicator.indeterminate .progress {
  animation: 2.8s linear infinite both indeterminate-linear-progress-anim;
}

@keyframes indeterminate-linear-progress-anim {
  0% {
    transform: scaleX(0%) translateX(0%);
  }

  3.125%,
  53.125% {
    transform: scaleX(20%) translateX(0%);
  }

  6.25% {
    transform: scaleX(30%) translateX(20%);
  }

  12.5%,
  62.5% {
    transform: scaleX(45%) translateX(60%);
  }

  25%,
  75% {
    transform: scaleX(100%) translateX(100%);
  }

  25.0000001%,
  50%,
  75.0000001%,
  100% {
    transform: scaleX(0%) translateX(0);
  }
}

@keyframes indeterminate {
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
}

@keyframes indeterminate-short {
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
}

.ids-loading-indicator-indeterminate {
  @include bg-azure-80();

  &::before {
    animation: indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    background-color: inherit;
    bottom: 0;
    content: '';
    left: 0;
    position: absolute;
    top: 0;
    will-change: left, right;
  }

  &::after {
    animation: indeterminate-short 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
    animation-delay: 1.15s;
    background-color: inherit;
    bottom: 0;
    content: '';
    left: 0;
    position: absolute;
    top: 0;
    will-change: left, right;
  }
}

// Handle Themes
.ids-loading-indicator[mode='dark'] .ids-loading-indicator-indeterminate {
  background-color: var(--ids-color-palette-azure-50);
}

.ids-tag[mode='contrast'] .ids-loading-indicator-indeterminate {
  background-color: var(--ids-color-palette-azure-90);
}

.ids-tag[version='classic'][mode='light'] .ids-loading-indicator-indeterminate {
  background-color: var(--ids-color-palette-azure-70);
}

.ids-tag[version='classic'][mode='dark'] .ids-loading-indicator-indeterminate {
  background-color: var(--ids-color-palette-azure-50);
}

.ids-tag[version='classic'][mode='contrast'] .ids-loading-indicator-indeterminate {
  background-color: var(--ids-color-palette-azure-90);
}
