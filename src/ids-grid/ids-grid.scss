/* CSS 12/8/4 column grid */
@import '../../node_modules/ids-identity/dist/theme-uplift/tokens/web/theme-uplift-mixins.scss';

// Grid - Sass Vars
$grid-cols-max: 16;
$grid-cols-median: 8;
$grid-cols-min: 4;
$breakpoint-xs: 360px;
$breakpoint-sm: 600px;
$breakpoint-md: 840px;
$breakpoint-lg: 1280px;
$breakpoint-xl: 1440px;

.ids-grid {
  // Define css custom props
  --grid-spacing-unit: 8px;
  --grid-gap: calc(var(--grid-spacing-unit) * 2);
  --grid-margin: calc(var(--grid-spacing-unit) * 2);

  // Increase grid margin on larger screens
  @media (min-width: $breakpoint-md) {
    --grid-margin: calc(var(--grid-spacing-unit) * 3);
  }

  // Define number of columns based on breakpoints
  @media (min-width: $breakpoint-xs) {
    --grid-cols: 4;
  }

  @media (min-width: $breakpoint-sm) {
    --grid-cols: 8;
  }

  @media (min-width: $breakpoint-md) {
    --grid-cols: 16;
  }

  // Base grid definition
  display: grid;
  grid-gap: var(--grid-gap);
  grid-template-columns: repeat(var(--grid-cols), minmax(0, 1fr));
  margin: var(--grid-margin);

  // Add bg color for placeholders
  .ids-background-fill {
    @include py-40();
    @include px-16();

    background-color: #efeff0;
  }

  // Grid Gap classes
  &.ids-grid-gap-8 {
    grid-gap: var(--grid-spacing-unit);
  }

  &.ids-grid-gap-16 {
    grid-gap: calc(var(--grid-spacing-unit) * 2);
  }

  &.ids-grid-gap-24 {
    grid-gap: calc(var(--grid-spacing-unit) * 3);
  }

  &.ids-grid-gap-32 {
    grid-gap: calc(var(--grid-spacing-unit) * 4);
  }

  // Grid Auto layout
  &.ids-grid-cols-auto {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  }
}

// Grid - Base
@for $i from 1 through $grid-cols-max {
  .ids-grid > .ids-grid-span-#{$i} {
    grid-column-end: span $i;
    width: auto;
  }
}

// Grid - XSmall and up
@media (min-width: $breakpoint-xs) {
  @for $i from 1 through $grid-cols-min {
    .ids-grid > .ids-grid-span-xs-#{$i} {
      grid-column-end: span $i;
      width: auto;
    }
  }

  // Reset base classes to full width
  @for $i from $grid-cols-min through $grid-cols-max {
    .ids-grid > .ids-grid-span-#{$i} {
      grid-column-end: span $grid-cols-min;
      width: auto;
    }
  }
}

// Grid - Small and up
@media (min-width: $breakpoint-sm) {
  @for $i from 1 through $grid-cols-median {
    .ids-grid > .ids-grid-span-sm-#{$i} {
      grid-column-end: span $i;
      width: auto;
    }
  }

  // Reset base classes to full width
  @for $i from $grid-cols-median through $grid-cols-max {
    .ids-grid > .ids-grid-span-#{$i} {
      grid-column-end: span $grid-cols-median;
      width: auto;
    }
  }
}

// Grid - Medium and up
@media (min-width: $breakpoint-md) {
  @for $i from 1 through $grid-cols-max {
    .ids-grid > .ids-grid-span-md-#{$i} {
      grid-column-end: span $i;
      width: auto;
    }

    .ids-grid > .ids-grid-span-#{$i} {
      grid-column-end: span $i;
      width: auto;
    }
  }
}

// Grid - Large and up
@media (min-width: $breakpoint-lg) {
  @for $i from 1 through $grid-cols-max {
    .ids-grid > .ids-grid-span-lg-#{$i} {
      grid-column-end: span $i;
      width: auto;
    }
  }
}

// Grid - XLarge and up
@media (min-width: $breakpoint-xl) {
  @for $i from 1 through $grid-cols-max {
    .ids-grid > .ids-grid-span-xl-#{$i} {
      grid-column-end: span $i;
      width: auto;
    }
  }
}
