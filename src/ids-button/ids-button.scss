/**
 * Ids Button Component CSS
 * (Includes standard and icon button rules)
 */
@import './ids-button-base';

:host {
  @include inline-flex();

  ::slotted(span) {
    vertical-align: bottom;
  }

  ::slotted(ids-icon) {
    vertical-align: middle;
  }

  ::slotted(span.audible) {
    @include audible();
  }
}

.ripple-effect {
  @include block();
  @include rounded-round();

  opacity: 0;
  position: absolute;
  transform: scale(0);

  &.animating {
    @include animation(ripple-animation 1.2s ease-out);
  }
}

.ids-button,
.ids-toggle-button,
.ids-menu-button {
  @include ids-base-button-styles();

  // Padding rules for buttons that insert both text/icon into the fallback (unnamed) slot.
  ::slotted(ids-icon:nth-child(2):last-child), // shadowroot + text + icon
  ::slotted(span:nth-child(2):last-child), // shadowroot + icon + text
  ::slotted(span:nth-child(3):last-child) { // shadowroot + icon + (audible text) + text
    @include pl-4();
  }

  .ids-icon {
    @include inline-flex();

    place-self: center;
    vertical-align: middle;
  }

  // Padding rules for standalone CSS buttons (match the rules/style above)
  .ids-icon:last-child,
  span + span,
  span:last-child {
    @include pl-4();
  }

  // Technically not valid
  ::slotted(ids-icon:only-child) {
    @include block();
  }

  .ripple-effect {
    height: 250px;
    width: 250px;
  }
}

.ids-icon-button {
  @include ids-base-button-styles();

  // Everything below is only for icon buttons
  @include px-8();
  @include py-8();
  @include rounded-round();

  .ids-icon {
    @include block();
    @include pl-0();

    font-size: 0;
  }

  span.audible {
    @include audible();
  }

  .ripple-effect {
    height: 70px;
    width: 70px;
  }
}

@include keyframes(ripple-animation) {
  from {
    @include opacity-50();

    transform: scale(0);
  }

  to {
    @include opacity-0();

    transform: scale(2);
  }
}
