/**
 * Radio Mixins.
 */
@use 'sass:list';
@use '../../themes/mixins/ids-core-mixins' as mixins;

// Unchecked
@mixin radio-unchecked {
  position: absolute;
  border: 1px solid var(--ids-component-border-color);
  border-radius: var(--ids-border-radius-round);
  height: 14px;
  left: 0;
  top: 3px;
  transition: border-color var(--ids-transition-length) var(--ids-transition-ease);
  width: 14px;
}

@mixin radio-unchecked-after {
  position: absolute;
  background-color: var(--ids-component-background-color);
  border: 1px solid var(--ids-component-background-color);
  border-radius: var(--ids-border-radius-round);
  content: '';
  height: 0;
  left: 6px;
  top: 6px;
  transition: all var(--ids-transition-length) var(--ids-transition-ease);
  width: 0;
}

@mixin radio-unchecked-error-circle {
  border-color: var(--ids-color-error-03);
}

@mixin radio-unchecked-error-label-text {
  color: var(--ids-color-error-03);
}

// Checked
@mixin radio-checked {
  background-color: var(--ids-component-primary-background-color);
  border-color: var(--ids-component-primary-background-color);
}

@mixin radio-checked-after {
  border-width: 2px;
  height: 4px;
  left: 3px;
  top: 3px;
  width: 4px;
}

// Disabled
@mixin radio-disabled-unchecked {
  border-color: var(--ids-component-disabled-color);
  cursor: var(--ids-cursor-default);
  box-shadow: none;
}

@mixin radio-disabled-unchecked-error-circle {
  border-color: var(--ids-color-error-02);
}

@mixin radio-disabled-unchecked-error-label-text {
  color: var(--ids-color-error-02);
}

@mixin radio-disabled-checked() {
  background-color: var(--ids-component-disabled-color);
  border-color: var(--ids-component-disabled-color);
}

@mixin radio-disabled-text {
  cursor: var(--ids-cursor-default);
  color: var(--ids-disabled-text-color);
}

// Focus
@mixin radio-focus {
  box-shadow: var(--ids-shadow-md)
}

// Colored
$color-names: 'emerald' 'amethyst' 'azure' 'amber' 'ruby';
$color-vars: --ids-color-emerald-70 --ids-color-amethyst-70 --ids-color-azure-70 --ids-color-amber-70 --ids-color-ruby-70;

@mixin radio-colored() {
  @each $name in $color-names {
    $i: list.index($color-names, $name);
    $color: var(#{list.nth($color-vars, $i)});

    &[color='#{$name}'] {
      input[type='radio'] {
        ~ .circle {
          @include radio-colored-circle-unchecked($color);
        }

        &:checked ~ .circle {
          @include radio-colored-circle-checked($color);
        }

        &:disabled ~ .circle {
          @include radio-disabled-unchecked();
        }

        &:disabled:checked ~ .circle {
          @include radio-disabled-checked();
        }

        &:focus ~ .circle {
          @include radio-colored-circle-focus($color);
        }
      }

      &:focus input[type='radio'] ~ .circle {
        @include radio-colored-circle-focus($color);
      }
    }
  }
}

@mixin radio-colored-circle-unchecked($color) {
  border-color: $color;
}

@mixin radio-colored-circle-checked($color) {
  background-color: $color;
}

@mixin radio-colored-circle-focus($color) {
  $secondary: var(--ids-component-darker-background-color);

  box-shadow: 0 0 0 1px $secondary, 0 0 0 2px $color, 0 0 4px 5px $secondary;
}
