/**
 * Ids Button Sass mixins, used in Ids Button CSS to define base styles.
 */
@use '../../themes/mixins/ids-core-mixins' as mixins;
@import '../../themes/mixins/ids-ripple-mixin';

// Mixin for a "blank" shadow (same as the standard one with a completely transparent alpha)
@mixin blank-shadow() {
  box-shadow: var(--ids-shadow-none);
}

// Used to make the focus "border" appear to be separated from the button (primary/secondary types).
@mixin outset-button-shadow($bg-color, $border-color) {
  box-shadow:
    0 0 0 2px $bg-color, // bg color
    0 0 0 3px $border-color, // primary color (border)
    0 0 4px 3px $border-color // primary color (shadowy-part)
}

// Used to make the focus "border" on non-solid buttons (modal buttons, etc)
@mixin modal-button-shadow() {
  box-shadow: var(--ids-modal-button-focus-shadow); // primary color (shadowy-part)
}

@mixin alternate-button-shadow() {
  box-shadow: var(--ids-shadow-inverse);
}

// Used to include a basic set of button styles within each individual button prototype.
@mixin ids-base-button-styles() {
  @include blank-shadow();

  font-weight: var(--ids-font-weight-normal);
  font-family: var(--ids-font-family);
  font-size: var(--ids-font-size-md);
  overflow: hidden;
  padding-bottom: calc(var(--ids-spacing-lg) - 2px);
  padding-top: calc(var(--ids-spacing-lg) - 2px);
  position: relative;

  &,
  &::before,
  &::after {
    box-sizing: border-box;
  }

  // Nothing inside the button itself should accept mouse events
  * {
    pointer-events: none;
  }

  // ====================================================
  // Base Button styles (default/tertiary)

  border: 1px solid transparent;
  background-color: transparent;
  color: currentColor;

  // Animate BG/Text/Border color changes on all styles
  transition:
    background-color var(--ids-transition-length) var(--ids-transition-ease),
    border-color var(--ids-transition-length) var(--ids-transition-ease),
    box-shadow var(--ids-transition-length) var(--ids-transition-ease),
    color var(--ids-transition-length) var(--ids-transition-ease),
    opacity var(--ids-transition-length) var(--ids-transition-ease);
  white-space: nowrap;

  &:focus {
    // Disable standard focus state in Chrome
    outline: none;
    outline-color: transparent;
  }

  &:not([disabled]) {
   cursor: var(--ids-cursor-pointer);
  }

  // ====================================================
  // Standard element types inside the button
  span {
    vertical-align: bottom;

    &.audible {
      @include mixins.audible();
    }
  }

  .ids-icon {
    vertical-align: middle;
  }

  // ====================================================
  // Alignment changes

  &.align-icon-end {
    ::slotted(ids-icon) {
      padding-inline-start: var(--ids-spacing-md);
    }
  }

  &.no-margins {
    margin-inline: var(--ids-spacing-none);
  }

  // Account for 2px borders on secondary buttons
  &:not(.btn-secondary) {
    margin: var(--ids-spacing-xs);
  }
}

/**
 * Provides standardized padding rules for certain button types
 */
@mixin ids-standard-button-padding() {
  padding-inline: var(--ids-spacing-4xl);
}

@mixin ids-inline-button-padding() {
  padding-inline: var(--ids-spacing-xlg);
}

/**
 * Provides the standard color rules for all regular buttons
 */
@mixin ids-standard-button-colors() {
  display: inline-flex;
  font-weight: var(--ids-button-tertiary-font-weight);
  border-radius: var(--ids-border-radius-md);

  // ====================================================
  // Default/Tertiary Button
  border-color: var(--ids-button-tertiary-border-color);
  color: var(--ids-button-tertiary-text-color);

  &:not(.hide-focus).is-active,
  &:not(.hide-focus):focus {
    border-color: var(--ids-button-tertiary-focus-border-color);
  }

  &:hover {
    color: var(--ids-button-tertiary-hover-text-color);
    background-color: var(--ids-button-tertiary-hover-background-color);
  }

  &[disabled] {
    color: var(--ids-button-tertiary-disabled-text-color);
    background-color: var(--ids-button-tertiary-disabled-background-color);
  }

  .ripple-effect {
    background-color: var(--ids-color-brand-primary-base);
  }

  // ====================================================
  // Tertiary Destructive Button
  &.btn-tertiary-destructive {
    color: var(--ids-color-error);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-color-error-70);
    }

    &:hover {
      background-color: var(--ids-button-destructive-hover-background-color);
      color: var(--ids-color-error-70);
    }

    &[disabled] {
      color: var(--ids-button-tertiary-disabled-text-color);
      background-color: transparent;
    }

    .ripple-effect {
      background-color: var(--ids-color-error);
    }
  }

  // ====================================================
  // Primary Button

  &.btn-primary {
    background-color: var(--ids-button-primary-background-color);
    border-color: var(--ids-button-primary-border-color);
    color: var(--ids-button-primary-text-color);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-button-primary-focus-border-color);
    }

    &:hover {
      background-color: var(--ids-button-primary-hover-background-color);
      border-color: var(--ids-button-primary-hover-border-color);
    }

    &[disabled] {
      background-color: var(--ids-button-primary-disabled-background-color);
      border-color: var(--ids-button-primary-disabled-border-color);
      color: var(--ids-button-primary-disabled-text-color);
    }

    .ripple-effect {
      background-color: var(--ids-button-primary-ripple-color);
    }
  }

  // ====================================================
  // Primary Destructive Button

  &.btn-primary-destructive {
    background-color: var(--ids-color-error);
    border-color: var(--ids-color-error);
    color: var(--ids-color-error-00);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-color-error);
    }

    &:hover {
      background-color: var(--ids-color-error-70);
      border-color: var(--ids-color-error-70);
    }

    &[disabled] {
      background-color: var( --ids-button-primary-disabled-background-color);
      border-color: var(--ids-button-primary-disabled-border-color);
      color: var(--ids-button-primary-disabled-text-color);
    }

    .ripple-effect {
      background-color: var(--ids-color-error-00);
    }
  }

  // ====================================================
  // Secondary Button

  &.btn-secondary {
    background-color: var(--ids-button-secondary-background-color);
    border-width: var(--ids-button-secondary-border-width);
    border-color: var(--ids-button-secondary-border-color);
    color: var(--ids-button-secondary-text-color);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-button-secondary-focus-border-color);
    }

    &:hover {
      background-color: var(--ids-button-secondary-hover-background-color);
    }

    &[disabled] {
      background-color: var(--ids-button-secondary-disabled-background-color);
      border-color: var(--ids-button-secondary-disabled-border-color);
      color: var(--ids-button-secondary-disabled-text-color);
    }

    .ripple-effect {
      background-color: var(--ids-button-secondary-ripple-color);
    }
  }

  // ====================================================
  // Light Mode Alternate

  // Don't apply these rules to "alternate-formatter"-style buttons
  // These appear in app menu
  &.color-variant-alternate {
    &:hover {
      background-color: rgba(255 255 255 / 0.15);
    }

    &.btn-tertiary-destructive {
      &:hover {
        background-color: var(--ids-color-error-30);
      }
    }
  }

  // These appear in places with dark background like app menu and masthead, generally default/tertiary buttons
  &.color-variant-alternate,
  &.color-variant-alternate-formatter {
    color: var(--ids-button-formatter-text-color);
    opacity: 0.8;

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-button-formatter-border-color);
      opacity: 1;
    }

    &:hover {
      color: var(--ids-button-formatter-text-color-hover);
      opacity: 1;
    }

    &[disabled] {
      background-color: transparent;
      color: var(--ids-button-formatter-disabled-text-color);
      opacity: 0.3;
    }

    .ripple-effect {
      background-color: var(--ids-color-palette-white);
    }
  }

  // Used on Editor and List Builder "darker" toolbars
  &.color-variant-alternate-formatter {
    opacity: 0.8;

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-focus-ring-border-color);
    }

    &:hover {
      background-color: transparent;
    }

    .ripple-effect {
      background-color: var(--ids-color-primary-light);
    }

    &.ids-menu-button.compact {
      padding: var(--ids-spacing-md);
      padding-inline: var(--ids-spacing-md);
    }
  }
}

/**
 * Provides the standard color rules for buttons that need box shadow
 */
@mixin ids-standard-button-shadows() {
  &:not(.btn-primary):not(.btn-secondary):not(.btn-primary-destructive):not(.btn-tertiary-destructive) {
    // ====================================================
    // Default/Tertiary Default/Light Mode
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      box-shadow: var(--ids-shadow-md);
    }

    &.color-variant-alternate {
      &:not(.hide-focus).is-active,
      &:not(.hide-focus):focus {
        box-shadow: var(--ids-shadow-inverse);
      }
    }

    &.color-variant-alternate-formatter {
      &:not(.hide-focus).is-active,
      &:not(.hide-focus):focus {
        box-shadow: var(--ids-shadow-md);
      }
    }
  }

  &.btn-tertiary-destructive {
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      box-shadow: var(--ids-shadow-error);
    }
  }

  &.btn-primary {
    // ====================================================
    // Primary Default/Light Mode
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      box-shadow: var(--ids-button-primary-focus-shadow);
    }

    &.color-variant-alternate {
      &:not(.hide-focus).is-active,
      &:not(.hide-focus):focus {
        @include outset-button-shadow(
          var(--ids-color-primary-70),
          var(--ids-color-primary-00)
        );
      }
    }
  }

  &.btn-primary-destructive {
    // ====================================================
    // Primary Destructive Default/Light Mode
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      @include outset-button-shadow(
        var(--ids-body-background-color),
        var(--ids-color-error)
      );
    }
  }

  &.btn-secondary {
    // ====================================================
    // Secondary Default/Light Mode
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      box-shadow: var(--ids-button-secondary-focus-shadow);
    }
  }
}

@mixin ids-modal-button-colors() {
  // ====================================================
  // Primary Button
  &.btn-primary {
    background-color: var(--ids-modal-background-color);
    color: var(--ids-modal-button-color);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      @include modal-button-shadow();
    }

    &:hover {
      color: var(--ids-modal-button-hover-color);
    }

    &[disabled] {
      opacity: 0.3;
    }

    .ripple-effect {
      background-color: var(--ids-modal-button-color);
    }
  }

  // ====================================================
  // Secondary/Tertiary Button

  &.btn-secondary,
  &.btn-tertiary {
    background-color: var(--ids-modal-background-color);
    color: var(--ids-color-primary-70);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      @include modal-button-shadow();
    }

    &:hover {
      color: var(--ids-color-slate-100);
    }

    &[disabled] {
      background-color: var(--ids-button-secondary-disabled-border-color);
      border-color: var(--ids-button-secondary-disabled-border-color);
    }

    .ripple-effect {
      background-color: var(--ids-color-primary-70);
    }
  }
}
