/* Ids Container Component */
@use '../../themes/mixins/ids-core-mixins' as mixins;

// Host styles are needed here for "placed" components like Popup.
// (acts as a CSS "reset" without needing a real one)
:host {
  display: block;
  contain: content;
  height: 100vh;
  width: 100vw;
}

:host([hidden]) {
  display: none;
}

.ids-container {
  background-color: var(--ids-color-background-default);
  box-sizing: border-box;
  color: var(--ids-color-text);
  height: 100%;
  outline: none;
  overflow: auto;
  padding: var(--ids-space-none);
  scroll-behavior: smooth;
  transition: background-color var(--ids-motion-duration) var(--ids-motion-ease), color var(--ids-motion-duration) var(--ids-motion-ease);
  width: 100%;

  &.color-variant-alternate {
    background-color: var(--ids-color-text-default);
    color: var(--ids-color-text-inverse);
  }

  &[scrollable='false'] {
    overflow: hidden;
  }
}

// ids-app-menu pushes the container
:host(.app-menu)::part(container) {
  @media (min-width: mixins.$breakpoint-md) {
    margin-bottom: var(--ids-space-none);
    transition: background-color var(--ids-motion-duration) var(--ids-motion-ease), color var(--ids-motion-duration) var(--ids-motion-ease);
    transition: width var(--ids-motion-duration) var(--ids-motion-ease), margin var(--ids-motion-duration) var(--ids-motion-ease);
  }
}

:host(.app-menu-is-open)::part(container) {
  @media (min-width: mixins.$breakpoint-md) {
    margin-inline-start: 300px;
    width: calc(100% - 300px);
    transition: width var(--ids-motion-duration) var(--ids-motion-ease), margin var(--ids-motion-duration) var(--ids-motion-ease);
  }
}
