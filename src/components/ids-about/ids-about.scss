@use '../ids-modal/ids-modal' as mixins;
@import '../ids-modal/ids-modal';

:host {
  contain: content;
}

.ids-about {
  .ids-modal-container {
    max-width: var(--ids-about-max-width);
    min-width: var(--ids-about-min-width);
  }

  .ids-modal-header {
    padding-block-start: 40px;
    justify-content: space-evenly;
    flex-direction: column;
    width: calc(100% - 40px);
  }

  .ids-modal-content-wrapper {
    padding-block: 4px;
    padding-inline: 24px;
    margin-block-end: 24px;
    overflow: hidden;
  }

  .ids-modal-content {
    @include mixins.antialiased();

    border: 1px solid var(--ids-about-border-color);
    padding: var(--ids-about-padding);
    margin-block-start: 0;
    margin-block-end: 24px;
    border-radius: var(--ids-border-radius-xs);
    max-height: 199px;
    outline: 0;
    overflow: auto;
    text-align: left;
    scroll-behavior: smooth;

    &:focus {
      border-color: var(--ids-about-focus-border-color);
      box-shadow: var(--ids-about-focus-box-shadow);
      outline: 0;
      outline-color: transparent;
    }

    &:hover {
      border-color: var(--ids-about-hover-border-color);
    }
  }
}

::slotted([slot='product']),
::slotted([slot='content']),
::slotted([slot='copyright']) {
  display: block;
  margin-block-end: 24px;
}

::slotted([slot='icon']) {
  margin-block-end: 8px;
}

::slotted([slot='buttons']) {
  position: absolute;
  top: 4px;
  right: 4px;
}

// Cancels out a border style applied by IdsModal
// (not needed since buttons are aligned differently here)
::slotted([slot='buttons']:not(:first-of-type)) {
  border-left: transparent;
}

// Move Stuff for RTL
:host([dir='rtl']) {
  ::slotted([slot='buttons']) {
    left: 4px;
    right: unset;
  }

  .ids-modal-content {
    text-align: right;
  }
}

div.ids-modal {
  pointer-events: initial;
}

@media (max-width: $breakpoint-sm) {
  div.ids-modal {
    margin-left: calc(300px - 50%);
    margin-right: 5%;
  }

  .ids-about .ids-modal-content {
    max-height: 400px;
  }
}
