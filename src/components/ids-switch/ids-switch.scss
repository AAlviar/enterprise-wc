/* Ids Switch Component */
@import '../../themes/mixins/ids-switch-mixin';

.ids-switch {
  margin-block-end: var(--ids-component-margin-bottom);

  label {
    cursor: var(--ids-cursor-pointer);
    user-select: none;
    padding-inline-start: 40px;
    position: relative;
    display: inline-block;

    &:hover .slider::after {
      @include switch-hover-after();
    }

    // For some reason, `:active` MUST come after `:hover` (if present) in the CSS definition in order to be effective!
    &:active .slider::after {
      @include switch-focus-after();
    }
  }

  &.disabled label {
    cursor: var(--ids-cursor-default);
  }

  input[type='checkbox'] {
    position: absolute;
    cursor: var(--ids-cursor-default);
    opacity: 0;
    height: 0;
    width: 0;

    ~ .slider {
      @include switch-off();

      &::after {
        @include switch-off-after();
      }
    }

    &:checked ~ .slider {
      @include switch-on();

      &::after {
        @include switch-on-after();
      }
    }

    &:focus ~ .slider::after {
      @include switch-focus-after();
    }

    &:disabled {
      ~ .slider {
        @include switch-disabled-off();
      }

      ~ .slider::after {
        @include switch-disabled-off-after();
      }

      ~ .label-text {
        @include switch-disabled-text();
      }

      &:checked ~ .slider {
        @include switch-disabled-on();
      }

      &:checked ~ .slider::after {
        @include switch-disabled-on-after();
      }
    }
  }
}

// Negate some rules for RTL
:host([dir='rtl']) {
  input[type='checkbox'] ~ .slider {
    left: initial;
    right: 0;
  }

  input[type='checkbox']:checked ~ .slider::after {
    left: 0;
    right: 15px;
  }

  input[type='checkbox'] ~ .slider::after {
    left: initial;
    right: 0;
  }

  label {
    padding-right: 40px;
    padding-left: 0;
  }
}
