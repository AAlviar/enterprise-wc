@import '../../core/ids-base';
@import '../../mixins/sass/ids-switch-mixin';

.ids-switch {
  @include mb-8();

  label {
    @include cursor-pointer();
    @include no-select();
    @include pl-40();
    @include relative();

    display: inline-block;

    &:hover .slider::after {
      @include switch-hover-after();
    }

    // For some reason, `:active` MUST come after `:hover` (if present) in the CSS definition in order to be effective!
    &:active .slider::after {
      @include switch-focus-after();
    }
  }

  &.disabled label {
    @include cursor-default();
  }

  input[type='checkbox'] {
    @include absolute();
    @include cursor-pointer();
    @include opacity-0();

    height: 0;
    width: 0;

    ~ .slider {
      @include switch-off();

      &::after {
        @include switch-off-after();
      }
    }

    &:checked ~ .slider {
      @include switch-on();

      &::after {
        @include switch-on-after();
      }
    }

    &:focus ~ .slider::after {
      @include switch-focus-after();
    }

    &:disabled {
      ~ .slider {
        @include switch-disabled-off();
      }

      ~ .slider::after {
        @include switch-disabled-off-after();
      }

      ~ .label-text {
        @include switch-disabled-text();
      }

      &:checked ~ .slider {
        @include switch-disabled-on();
      }

      &:checked ~ .slider::after {
        @include switch-disabled-on-after();
      }
    }
  }
}

// Handle Themes
.ids-switch[mode='dark'] {
  input[type='checkbox']:disabled ~ .slider:not(.checked) {
    @include bg-slate-60();
    @include border-slate-60();

    &::after {
      @include bg-slate-70();
      @include border-slate-60();
    }
  }

  input[type='checkbox']:focus ~ .slider::after {
    box-shadow: 0 0 0 3px var(--ids-color-palette-azure-90), 0 0 0 4px var(--ids-color-palette-azure-60);
  }
}

.ids-switch[mode='contrast'] {
  input[type='checkbox']:not(:disabled) ~ .slider {
    @include bg-slate-80();
    @include border-slate-60();

    &::after {
      @include bg-white();
      @include border-slate-30();
    }
  }

  input[type='checkbox']:not(:disabled) ~ .slider.checked {
    @include bg-azure-90();
    @include border-azure-90();

    &::after {
      @include bg-azure-90();
      @include border-azure-90();
    }
  }

  input[type='checkbox']:disabled ~ .slider:not(.checked) {
    @include bg-slate-40();
    @include border-slate-40();

    &::after {
      @include bg-slate-20();
      @include border-slate-20();
    }
  }
}

// Negate some rules for RTL
:host([dir='rtl']) {
  input[type='checkbox'] ~ .slider {
    left: initial;
    right: 0;
  }

  input[type='checkbox']:checked ~ .slider::after {
    left: 0;
    right: 15px;
  }

  input[type='checkbox'] ~ .slider::after {
    left: initial;
    right: 0;
  }

  label {
    padding-right: 40px;
    padding-left: 0;
  }
}
