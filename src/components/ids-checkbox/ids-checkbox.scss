@import '../../core/ids-base';
@import '../../mixins/sass/ids-checkbox-mixin';
@import '../../mixins/sass/ids-dirty-tracker-mixin';
@import '../../mixins/sass/ids-validation-mixin';

:host(.justify-center) .ids-checkbox .checkmark,
:host(.justify-center) .ids-checkbox[mode='dark']:not([color]) input[type='checkbox'] ~ .checkmark,
:host(.justify-center) .ids-checkbox[mode='contrast']:not([color]) input[type='checkbox'] ~ .checkmark {
  top: calc(50% - 8px);
}

:host([no-margin]) .ids-checkbox {
  @include m-0();
}

.ids-checkbox {
  @include mb-8();

  label {
    @include cursor-pointer();
    @include no-select();
    @include pl-24();
    @include relative();

    display: inline-block;

    &.empty::before {
      content: '\00a0';
    }

    &.required .label-checkbox::after {
      @include absolute();
      @include font-sans();
      @include mx-2();
      @include text-20();
      @include text-alert-error();

      content: '*';
      right: -13px;
      top: -2px;
    }

    &.no-required-indicator,
    &.empty {
      .label-checkbox::after {
        content: '';
      }
    }
  }

  &.disabled label {
    @include cursor-default();

    &.required .label-checkbox::after {
      @include text-ruby-30();
    }
  }

  &.hitbox {
    @include py-12();

    label {
      padding-inline-start: 42px;

      span.checkmark {
        margin-inline-start: 14px;
      }
    }

    .validation-message {
      margin-inline-start: 14px;
    }
  }

  &.horizontal {
    @include mr-12();

    display: inline-block;
  }

  input[type='checkbox'] {
    @include absolute();
    @include cursor-pointer();
    @include opacity-0();

    height: 0;
    width: 0;

    ~ .checkmark {
      @include checkbox-unchecked();
    }

    &.error ~ .checkmark {
      @include checkbox-unchecked-error();
    }

    &:checked ~ .checkmark {
      @include checkbox-checked();

      &::after {
        @include checkbox-checked-after();
      }
    }

    &.indeterminate ~ .checkmark {
      @include checkbox-indeterminate();

      &::after {
        @include checkbox-indeterminate-after();
      }
    }

    &:focus ~ .checkmark {
      @include checkbox-focus();
    }

    &:disabled {
      ~ .checkmark {
        @include checkbox-disabled-unchecked();
      }

      ~ .label-checkbox {
        @include checkbox-disabled-text();
      }

      &.error ~ .checkmark {
        @include checkbox-disabled-unchecked-error();
      }

      &:checked ~ .checkmark {
        @include checkbox-disabled-checked(light);
      }
    }
  }

  &.no-animation {
    input[type='checkbox']:checked ~ .checkmark::after {
      animation: none;
    }
  }

  // Colored Checkboxes
  @include checkbox-colored();

  .validation-message {
    @include mt-4();

    margin-inline-start: -1px;
  }

  &.has-focus {
    input[type='checkbox'] ~ .checkmark {
      border-color: var(--ids-color-palette-azure-60);
      box-shadow: 0 0 4px 3px rgb(54 138 192 / 0.3);
    }
  }
}

:host-context(form) {
  @include mb-8();
  @include flex();
}

// Handle Themes
.ids-checkbox[mode='dark'] {
  input[type='checkbox']:disabled ~ .checkmark {
    @include checkbox-disabled-checked(dark);
  }
}

.ids-checkbox[mode='dark']:not([color]) {
  input[type='checkbox'] ~ .checkmark {
    @include checkbox-unchecked(dark);
  }

  input[type='checkbox']:checked ~ .checkmark {
    @include checkbox-checked(dark);
  }

  input[type='checkbox']:disabled ~ .checkmark {
    @include checkbox-disabled-checked(dark);
  }

  input[type='checkbox'].indeterminate ~ .checkmark {
    @include checkbox-indeterminate(dark);
  }
}

.ids-checkbox[mode='contrast'] {
  input[type='checkbox']:disabled ~ .checkmark {
    @include checkbox-disabled-checked(contrast);
  }

  &.has-focus {
    input[type='checkbox'] ~ .checkmark {
      border-color: var(--ids-color-palette-azure-90);
    }
  }
}

.ids-checkbox[mode='contrast']:not([color]) {
  input[type='checkbox'] ~ .checkmark {
    @include checkbox-unchecked(contrast);
  }

  input[type='checkbox']:checked ~ .checkmark {
    @include checkbox-checked(contrast);
  }

  input[type='checkbox']:disabled ~ .checkmark {
    @include checkbox-disabled-checked(contrast);
  }

  input[type='checkbox'].indeterminate ~ .checkmark {
    @include checkbox-indeterminate(contrast);
  }
}

.ids-checkbox[mode='dark'][version='contrast'] {
  input[type='checkbox']:disabled ~ .checkmark {
    @include checkbox-disabled-checked(classicContrast);
  }
}

.ids-checkbox[mode='dark'][version='contrast']:not([color]) {
  input[type='checkbox'] ~ .checkmark {
    @include checkbox-unchecked(classicContrast);
  }

  input[type='checkbox']:checked ~ .checkmark {
    @include checkbox-checked(classicContrast);
  }

  input[type='checkbox']:disabled ~ .checkmark {
    @include checkbox-disabled-checked(classicContrast);
  }

  input[type='checkbox'].indeterminate ~ .checkmark {
    @include checkbox-indeterminate(classicContrast);
  }
}

// Negate some rules for RTL
:host([dir='rtl']) {
  input[type='checkbox'] ~ .checkmark {
    left: initial;
    right: 0;
  }

  label.required .label-checkbox::after {
    right: initial;
    left: -13px;
  }
}

// Multiselect checkbox
:host(.multiselect-checkbox) {
  input[type='checkbox']:not(:checked):not(:disabled) ~ .checkmark {
    @include bg-white();
  }

  .ids-checkbox[mode='dark'] input[type='checkbox']:not(:checked):not(:disabled) ~ .checkmark {
    @include bg-transparent();
  }

  .ids-checkbox[mode='dark'] input[type='checkbox']:checked ~ .checkmark {
    @include bg-slate-60();

    border-color: var(--ids-color-palette-slate-60);
  }

  .ids-checkbox[mode='dark']:hover input[type='checkbox']:checked ~ .checkmark {
    border-color: var(--ids-color-palette-slate-40);
  }

  .ids-checkbox label {
    @include pl-16();
  }
}
